plugins {
    id 'groovy'
    id 'codenarc'
//    id 'com.bmuschko.clover' version '3.0.3'
    id 'nebula.integtest' version '9.6.3'
    id 'idea'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.gradle.plugin-publish' version '0.20.0'
    id 'com.github.ben-manes.versions' version '0.42.0'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    compileOnly gradleApi()

    implementation 'org.codehaus.gpars:gpars:1.2.1'
    implementation 'org.zeroturnaround:zt-exec:1.12'
    implementation 'net.masterthought:cucumber-reporting:5.5.2'

    testImplementation gradleApi()
    testImplementation 'com.netflix.nebula:nebula-test:10.2.0'

    integTestImplementation gradleApi()
    integTestImplementation 'com.netflix.nebula:nebula-test:10.2.0'

//    clover 'org.openclover:clover:4.4.1'
}

codenarc {
    configFile = rootProject.file('codenarcrule.groovy')
    reportFormat = System.properties['codeNarcOutput'] ?: 'html'
    maxPriority2Violations = Integer.MAX_VALUE
    maxPriority3Violations = Integer.MAX_VALUE
}

/*
clover {
    report {
        xml = true
        html = true
    }
}

test {
    finalizedBy cloverGenerateReport
}

integrationTest {
    finalizedBy cloverGenerateReport
}
*/

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar, jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

createReleaseTag.dependsOn build, sourcesJar, javadocJar
createReleaseTag.dependsOn publishPlugins

pluginBundle {
    website = "https://github.com/double16/gradle-cucumber-jvm-plugin"
    vcsUrl = "https://github.com/double16/gradle-cucumber-jvm-plugin"
    description = "The gradle cucumber-jvm plugin provides the ability to run cucumber acceptance tests directly from a Gradle build."
    tags = ["cucumber", "java", "testing"]
    plugins {
        cucumberJvm {
            id = "com.patdouble.cucumber-jvm"
            displayName = "Cucumber-JVM Plugin"
        }
    }
    mavenCoordinates {
        groupId = "com.patdouble"
        artifactId = "gradle-cucumber-jvm-plugin"
    }
}
